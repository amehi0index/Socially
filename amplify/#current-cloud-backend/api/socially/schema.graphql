# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Post
  @model
  @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  title: String!
  content: String!
  coverImage: String
  likes: [PostLike] @hasMany(indexName: "byPost", fields: ["id"])
  userID: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userID"])
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
}

type Subscription {
  onCreateByPostId(postId: String!): Post
    @aws_subscribe(mutations: ["createPost"])
}

type Comment
  @model
  @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  content: String
  userID: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userID"])
}

type PostLike
  @model
  @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  postID: ID! @index(name: "byPost")
  userID: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userID"])
}

type User
  @model
  @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  handle: String
  email: String!
  avatar: String
  pronouns: String
  posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
  likes: [PostLike] @hasMany(indexName: "byUser", fields: ["id"])
}

